↓MinusLevel [steps.SimpleStep-1595494083670]: 
  expression: |
    level = level - 1;
    // level = 0; // comment this and re-enable the 2 Then to enable level again
↓array [steps.XMLComplexStep-1595493946412]: 
  nodeName: array
  ↓Attribute [steps.XMLAttributeStep-1595493960148]: 
    nodeName: type
    nodeText: array
  ↓jIfThenElse [steps.IfThenElseStep-1595493995283]: 
    condition: qname == "root"
    ↓jThen [steps.ThenStep-1595493996012]: 
      ↓jIterator [steps.SimpleIteratorStep-1595494019491]: 
        expression: com.twinsoft.convertigo.engine.Engine.theApp.databaseObjectsManager.getAllProjectNamesList(true)
        ↓dbo [steps.XMLComplexStep-1595494019494]: 
          nodeName: dbo
          ↓type [steps.XMLAttributeStep-1599122401043]: 
            isEnabled: false
            nodeName: type
            nodeText: object
          ↓jSource [steps.SourceStep-1595596256118]: 
            sourceDefinition: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
                - com.twinsoft.convertigo.beans.common.XMLVector: 
                  - java.lang.String: 
                    - ↑value: 1595494019494
                  - java.lang.String: 
                    - ↑value: .
            variableName: dboNode
          ↓jIfThenElse [steps.IfThenElseStep-1595494019506]: 
            condition: level > 0
            ↓jThen [steps.ThenStep-1595494019509]: 
              ↓walkChildren [steps.SimpleStep-1595596226555]: 
                expression: |
                  'context.addTextNode(dboNode.item(0), "qname", item);
                  context.addTextNode(dboNode.item(0), "displayName", item);
                  context.addTextNode(dboNode.item(0), "className", com.twinsoft.convertigo.beans.core.Project);
                  
                  parentQName = item;
                  
                  walkChildren(dboNode.item(0), parentQName);
                  
                  
                  function walkChildren(parentNode, parentQName) {
                  	
                  	// getting dbo and its children
                  	var dbo = com.twinsoft.convertigo.engine.Engine.theApp.databaseObjectsManager.getDatabaseObjectByQName(parentQName);
                  	var child = dbo.getDatabaseObjectChildren();
                  	
                  	if(!child.isEmpty()) {
                  		
                  		// creating children node in parent''s node
                  		var childNode = context.addTextNode(parentNode, "children", "");
                  		childNode.setAttribute("type", "array");
                  
                  		// for each children 
                  		for (var i = 0; i < child.size(); i++) {
                  			var childQName = child.get(i).getFullQName();
                  			var childDisplayName = child.get(i).getName();
                  			var childClassName = child.get(i).getClass().getName();
                  		
                  			// creating new dbo''s node for children
                  			var dboChildNode = context.addTextNode(childNode, "dbo", "");
                  			context.addTextNode(dboChildNode, "qname", '''' + childQName);
                  			context.addTextNode(dboChildNode, "displayName", '''' + childDisplayName);
                  			context.addTextNode(dboChildNode, "className", '''' + childClassName);
                  			
                  			
                  			// getting children of children
                  			walkChildren(dboChildNode, childQName)
                  		}
                  	}
                  	
                  }'
            ↓jElse [steps.ElseStep-1595494019530]: 
              ↓qname [steps.ElementStep-1595597764544]: 
                expression: item
                nodeName: qname
              ↓displayName [steps.ElementStep-1595597764547]: 
                expression: item
                nodeName: displayName
              ↓className [steps.XMLElementStep-1595597764550]: 
                nodeName: className
                nodeText: com.twinsoft.convertigo.beans.core.Project
              ↓hasChildren [steps.XMLElementStep-1595494019533]: 
                nodeName: hasChildren
                nodeText: true
                ↓type [steps.XMLAttributeStep-1595494019536]: 
                  nodeName: type
                  nodeText: boolean
    ↓jElse [steps.ElseStep-1595493996014]: 
      ↓jIterator [steps.SimpleIteratorStep-1595494243488]: 
        expression: com.twinsoft.convertigo.engine.Engine.theApp.databaseObjectsManager.getDatabaseObjectByQName(qname).getDatabaseObjectChildren()
        ↓dbo [steps.XMLComplexStep-1595494243491]: 
          nodeName: dbo
          ↓type [steps.XMLAttributeStep-1595494243494]: 
            isEnabled: false
            nodeName: type
            nodeText: object
          ↓jSource [steps.SourceStep-1595514510828]: 
            sourceDefinition: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
                - com.twinsoft.convertigo.beans.common.XMLVector: 
                  - java.lang.String: 
                    - ↑value: 1595494243491
                  - java.lang.String: 
                    - ↑value: .
            variableName: dboNode
          ↓jIfThenElse1 [steps.IfThenElseStep-1595494243503]: 
            condition: level > 0
            ↓jThen [steps.ThenStep-1595494243506]: 
              ↓walkChildren [steps.SimpleStep-1595495967579]: 
                expression: |
                  'context.addTextNode(dboNode.item(0), "qname", item.getFullQName());
                  context.addTextNode(dboNode.item(0), "displayName", item.getName());
                  context.addTextNode(dboNode.item(0), "className", item.getClass().getName());
                  
                  parentQName = item.getFullQName();
                  
                  walkChildren(dboNode.item(0), parentQName);
                  
                  
                  function walkChildren(parentNode, parentQName) {
                  	
                  	// getting dbo and its children
                  	var dbo = com.twinsoft.convertigo.engine.Engine.theApp.databaseObjectsManager.getDatabaseObjectByQName(parentQName);
                  	var child = dbo.getDatabaseObjectChildren();
                  	
                  	if(!child.isEmpty()) {
                  		
                  		// creating children node in parent''s node
                  		var childNode = context.addTextNode(parentNode, "children", "");
                  		childNode.setAttribute("type", "array");
                  
                  		// for each children 
                  		for (var i = 0; i < child.size(); i++) {
                  			var childQName = child.get(i).getFullQName();
                  			var childDisplayName = child.get(i).getName();
                  			var childClassName = child.get(i).getClass().getName();
                  		
                  			// creating new dbo''s node for children
                  			var dboChildNode = context.addTextNode(childNode, "dbo", "");
                  			context.addTextNode(dboChildNode, "qname", '''' + childQName);
                  			context.addTextNode(dboChildNode, "displayName", '''' + childDisplayName);
                  			context.addTextNode(dboChildNode, "className", '''' + childClassName);
                  			
                  			
                  			// getting children of children
                  			walkChildren(dboChildNode, childQName)
                  		}
                  	}
                  	
                  }'
            ↓jElse [steps.ElseStep-1595494243527]: 
              ↓jElement1 [steps.ElementStep-1595597671111]: 
                expression: item.getFullQName()
                nodeName: qname
              ↓jElement11 [steps.ElementStep-1595597694398]: 
                expression: item.getName()
                nodeName: dislayName
              ↓jElement111 [steps.ElementStep-1595597724197]: 
                expression: item.getClass().getName()
                nodeName: className
              ↓jElement [steps.ElementStep-1595494243530]: 
                expression: '!item.getDatabaseObjectChildren().isEmpty()'
                nodeName: hasChildren
                ↓type [steps.XMLAttributeStep-1595494243533]: 
                  nodeName: type
                  nodeText: boolean
          ↓jIfThenElse [steps.IfThenElseStep-1595494243539]: 
            condition: dbo instanceof com.twinsoft.convertigo.beans.core.MobileComponent
            isEnabled: false
            ↓jThen [steps.ThenStep-1595494243542]: 
            ↓jElse [steps.ElseStep-1595494243545]: 
              ↓className [steps.ElementStep-1595494243548]: 
                expression: item.getClass().getName()
                nodeName: className
↓qname [variables.RequestableVariable-1595423218746]: 
↓level [variables.RequestableVariable-1595494053616]: 
↓C8oStudio [core.TestCase]: 
  ↓qname [variables.TestCaseVariable-1595494301382]: 
    value: C8oStudio
  ↓level [variables.TestCaseVariable-1595494301384]: 
    value: 100
↓GetChildren [core.TestCase]: 
  ↓qname [variables.TestCaseVariable-1595495024335]: 
    value: C8oStudio.sq:GetChildren
  ↓level [variables.TestCaseVariable-1595495024337]: 
    value: 100
↓lvl0 [core.TestCase]: 
  ↓qname [variables.TestCaseVariable-1595597785761]: 
    value: C8oStudio.sq:GetChildren
  ↓level [variables.TestCaseVariable-1595597785763]: 
    value: 0
↓root [core.TestCase]: 
  ↓qname [variables.TestCaseVariable-1595597258932]: 
    value: root
  ↓level [variables.TestCaseVariable-1595597258934]: 
    value: 100