scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        import { TreeModel, TreeNode, IActionHandler } from "angular-tree-component/dist/angular-tree-component";
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	nodes = [];
        	options = {
        	    idField: ''qname'',
                getChildren: (node:TreeNode) => {
                    return new Promise((resolve, reject) => {
                        this.c8o.callJson(''.GetChildren'', ''qname'', node.data.qname).then((response, parameters) => {
                            resolve(response[''array'']);
                            return null;
                        });
                    });
                },
                allowDrag: true,
                actionMapping: {
                    mouse: {
                        drop: (tree:TreeModel, node:TreeNode, $event:any, {from, to}) => {
                            var data = $event.dataTransfer.getData(''application/json'');
                            data = data ? JSON.parse(data) : null;
                            console.log(''drop $event:'');
                            console.log($event);
                            console.log(''drop datatr:'');
                            console.log(data);
                            console.log(''drop from:'');
                            console.log(from);
                            console.log(''drop to:'');
                            console.log(to);
                            var before = '''';
                            if (!to.dropOnNode) {
                                try {
                                    before = to.parent.children[to.index].data.qname
                                } catch (e) {}
                            }
                            if (from != null) {
                                this.c8o.callJson(''C8oStudio.MoveDatabaseObject'',
                                    ''from'', from.data.qname,
                                    ''to'', to.parent.data.qname,
                                    ''before'', before
                                ).then((response, param) => {
                                    if (response[''success'']) {
                                        tree.moveNode(from, to);
                                        from.data.qname = response[''qname''];
                                    }
                                    return null;
                                });
                            } else if (data != null) {
                                if (data[''from''] == ''Palette'') {
                                    console.log(''ClassName: '' + data[''className'']);
                                    this.c8o.callJson(''C8oStudio.NewDatabaseObject'',
                                        ''className'', data[''className''],
                                        ''to'', to.parent.data.qname,
                                        ''before'', before
                                    ).then((response, param) => {
                                        if (response[''success'']) {
                                            this.refresh(to.parent.data.qname);
                                        }
                                        return null;
                                    });
                                }
                            }
                        },  
                    }
                }
        	}
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		window[''c8o_c8o''] = this.c8o;
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	ngAfterViewInit() {
        	    window[''c8o_tree''] = this.tree;
        	    this.c8o.callJson(''.GetChildren'', ''qname'', ''root'').then((response, parameters) => {
                    this.nodes = response[''array''];
                    this.tree.treeModel.update();
                    return null;
                });
        	}
        	
        	refresh(qname) {
        	    var node:TreeNode = this.tree.treeModel.getNodeById(qname);
                node.collapse();
                node.data.hasChildren = true;
                node.children = null;
                node.expand();
        	}
        	/*End_c8o_PageFunction*/
        '
segment: path-to-projects
title: Title for Projects
↓PageEvent [mobile.components.UIPageEvent-1588600884566]: 
  ↓useAngularTreeComp [mobile.components.UICustomAction-1588600884569]: 
    module_ng_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: TreeModule
    module_ts_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: TreeModule
              - java.lang.String: 
                - ↑value: angular-tree-component
    package_dependencies: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: angular-tree-component
              - java.lang.String: 
                - ↑value: 7.2.1
↓ButtonSet [mobile.components.UIDynamicElement-1589198919296]: 
  beanData: '{"ionBean":"ButtonSet"}'
  tagName: ion-buttons
  ↓Save [mobile.components.UIDynamicElement-1589198944828]: 
    beanData: '{"ionBean":"Button"}'
    tagName: button
    ↓Icon [mobile.components.UIDynamicElement-1589198839410]: 
      beanData: '{"ionBean":"Icon","IconName":"plain:archive"}'
      tagName: ion-icon
    ↓Event [mobile.components.UIControlEvent-1589203245136]: 
      ↓Save [mobile.components.UIDynamicAction-1589203255756]: 
        beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:C8oStudio.Save"}'
        ↓project [mobile.components.UIControlVariable-1589203568250]: 
          comment: new variable
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.tree.treeModel.getFocusedNode().data.qname.replace(/\\..*/, '')
        ↓Log [mobile.components.UIDynamicAction-1589207109103]: 
          beanData: '{"ionBean":"LogAction","message":"script:out.success ? ''saved'' : ''save failed''"}'
  ↓Refresh [mobile.components.UIDynamicElement-1589356972701]: 
    beanData: '{"ionBean":"Button"}'
    tagName: button
    ↓Icon [mobile.components.UIDynamicElement-1589356972704]: 
      beanData: '{"ionBean":"Icon","IconName":"plain:refresh-circle"}'
      tagName: ion-icon
    ↓Event [mobile.components.UIControlEvent-1589356972707]: 
      ↓Refresh [mobile.components.UICustomAction-1589357096393]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                		this.refresh(this.tree.treeModel.getFocusedNode().data.qname);
                		resolve();
                '
↓Tag [mobile.components.UIElement-1588600889253]: 
  identifier: tree
  tagName: tree-root
  ↓nodes [mobile.components.UIAttribute-1588600889256]: 
    attrName: '[nodes]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
        - MobileSmartSourceType: script:nodes
  ↓options [mobile.components.UIAttribute-1588600889259]: 
    attrName: '[options]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
        - MobileSmartSourceType: script:options
  ↓Tag [mobile.components.UIElement-1588602370121]: 
    identifier: treeNodeTemplate
    tagName: ng-template
    ↓Tag [mobile.components.UIElement-1588602538271]: 
      selfClose: true
      tagName: img
      ↓Attr [mobile.components.UIAttribute-1588602577993]: 
        attrName: src
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:{{ this.c8o.endpoint }}/.bin?__sequence=GetIcon&className={{ node.data.className }}
    ↓span [mobile.components.UIElement-1588602429371]: 
      tagName: span
      ↓Text [mobile.components.UIText-1588602449534]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:{{ node.data.displayName }}
      ↓Attr [mobile.components.UIAttribute-1589307825059]: 
    ↓Attr [mobile.components.UIAttribute-1588602477828]: 
      attrName: let-node
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:
  ↓Event [mobile.components.UIControlEvent-1588665835563]: 
    attrName: (focus)
    eventName: (focus)
    ↓PublishEvent [mobile.components.UIDynamicAction-1588686512803]: 
      beanData: |
        '{
         "ionBean": "PublishEventAction",
         "topic": "plain:dboFocus",
         "data": "script:$event.node.data.qname"
        }'