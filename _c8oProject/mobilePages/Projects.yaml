scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        import { TreeModel, TreeNode, IActionHandler } from "angular-tree-component/dist/angular-tree-component";
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	nodes = [];
        	options = {
        	    idField: ''qname'',
                getChildren: (node:TreeNode) => {
                    return new Promise((resolve, reject) => {
                        this.c8o.callJson(''.GetChildren'', ''qname'', node.data.qname, ''handleFolders'', true).then((response, parameters) => {
                            resolve(response[''array'']);
                            return null;
                        });
                    });
                },
                allowDrag: true,
                actionMapping: {
                    mouse: {
                        dblClick: (tree:TreeModel, node:TreeNode, $event:any) => {
                            this.events.publish(''edit'', node.data.qname);
                        },
                        drop: (tree:TreeModel, node:TreeNode, $event:any, {from, to}) => {
                            var data = $event.dataTransfer.getData(''application/json'');
                            data = data ? JSON.parse(data) : null;
                            console.log(''drop $event:'');
                            console.log($event);
                            console.log(''drop datatr:'');
                            console.log(data);
                            console.log(''drop from:'');
                            console.log(from);
                            console.log(''drop to:'');
                            console.log(to);
                            var before = '''';
                            if (!to.dropOnNode) {
                                try {
                                    before = to.parent.children[to.index].data.qname
                                } catch (e) {}
                            }
                            if (from != null) {
                                this.c8o.callJson(''C8oStudio.MoveDatabaseObject'',
                                    ''from'', from.data.qname,
                                    ''to'', to.parent.data.qname,
                                    ''before'', before
                                ).then((response, param) => {
                                    if (response[''success'']) {
                                        var newTo = response[''qname''].replace(new RegExp("(?:\\.|(:))[^.:]*?$"), "$1");
                                        to.parent = this.tree.treeModel.getNodeById(newTo);
                                        if (to.dropOnNode) {
                                          to.dropOnNode = false;
                                          to.index = to.parent.children.length;
                                        }
                                        tree.moveNode(from, to);
                                        from.data.qname = response[''qname''];
                                        from.data.displayName = response[''displayName''];
                                    }
                                    return null;
                                });
                            } else if (data != null) {
                                if (data[''from''] == ''Palette'') {
                                    console.log(''ClassName: '' + data[''className'']);
                                    this.c8o.callJson(''C8oStudio.NewDatabaseObject'',
                                        ''className'', data[''className''],
                                        ''to'', to.parent.data.qname,
                                        ''before'', before
                                    ).then((response, param) => {
                                        if (response[''success'']) {
                                            this.refresh(to.parent.data.qname.replace(new RegExp("\\.\\w+?:$"), ""));
                                        }
                                        return null;
                                    });
                                }
                            }
                        },  
                    }
                }
        	}
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		window[''c8o_c8o''] = this.c8o;
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	ngAfterViewInit() {
        	    window[''c8o_tree''] = this.tree;
        	    this.c8o.callJson(''.GetChildren'', ''qname'', ''root'').then((response, parameters) => {
                    this.nodes = response[''array''];
                    this.tree.treeModel.update();
                    window.setTimeout(() => {
                        this.tree.treeModel.expandAll();
                        this.tree.treeModel.collapseAll();
                    }, 1);
                    return null;
                });
        
        		// Style Treeview scrollBars. As treeview is not in the shadowDom, we can 
        		// Style it directly...
        	    setTimeout(() => {
        			 let content = this.tree.viewportComponent.elementRef.nativeElement
        			 const styles = document.createElement(''style'');
        			  
        			 styles.textContent = `
        			    ::-webkit-scrollbar {
        			      width: 5px;
        			    }
        			
        			    /* Track */
        			    ::-webkit-scrollbar-track {
        			      box-shadow: inset 0 0 5px grey; 
        			      border-radius: 5px;
        			    }
        			
        			    /* Handle */
        			    ::-webkit-scrollbar-thumb {
        			      background: #2d3436; 
        			      border-radius: 5px;
        			    }
        			
        			    /* Handle on hover */
        			    ::-webkit-scrollbar-thumb:hover {
        			      background: #b30000; 
        			    }
        			 `;
        			 content.appendChild(styles);
        		}, 250);
        	}
        	
        	refresh(qname) {
        	    var node:TreeNode = this.tree.treeModel.getNodeById(qname);
                node.collapse();
                node.data.hasChildren = true;
                node.children = null;
                node.expand();
        	}
        	
        	prefetch(node:TreeNode) {
        		node.expand();
        		node.collapse();
        	}
        	/*End_c8o_PageFunction*/
        '
segment: path-to-projects
title: Title for Projects1
↓PageEvent [ngx.components.UIPageEvent-1593004414051]: 
  ↓useAngularTreeComp [ngx.components.UICustomAction-1593004414054]: 
    module_ng_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: TreeModule.forRoot()
    module_ts_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: TreeModule
              - java.lang.String: 
                - ↑value: angular-tree-component
    package_dependencies: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: angular-tree-component
              - java.lang.String: 
                - ↑value: 8.5.6
↓Header [ngx.components.UIDynamicElement-1596466499450]: 
  beanData: '{"ionBean":"Header"}'
  tagName: ion-header
  ↓ButtonSet [ngx.components.UIDynamicElement-1593004414057]: 
    beanData: '{"ionBean":"ButtonSet"}'
    tagName: ion-buttons
    ↓Save [ngx.components.UIDynamicElement-1596468949617]: 
      beanData: '{"ionBean":"Button"}'
      tagName: ion-button
      ↓Icon [ngx.components.UIDynamicElement-1593004414063]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:archive"}'
        tagName: ion-icon
      ↓Event [ngx.components.UIControlEvent-1593004414066]: 
        ↓Save [ngx.components.UIDynamicAction-1593004414069]: 
          beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:C8oStudio.Save"}'
          ↓project [ngx.components.UIControlVariable-1593004414072]: 
            comment: new variable
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.tree.treeModel.getFocusedNode().data.qname.replace(/\\..*/, '')
          ↓Log [ngx.components.UIDynamicAction-1593004414075]: 
            beanData: '{"ionBean":"LogAction","message":"script:out.success ? ''saved'' : ''save failed''"}'
          ↓Toast [ngx.components.UIDynamicAction-1596464023553]: 
            beanData: '{"ionBean":"ToastAction","message":"script:out.success ? ''saved'' : ''save failed''"}'
      ↓Attr [ngx.components.UIAttribute-1596470720741]: 
        attrName: title
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Save
    ↓Refresh [ngx.components.UIDynamicElement-1596468952408]: 
      beanData: '{"ionBean":"Button"}'
      tagName: ion-button
      ↓Icon [ngx.components.UIDynamicElement-1593004414081]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:refresh-circle"}'
        tagName: ion-icon
      ↓Event [ngx.components.UIControlEvent-1593004414084]: 
        ↓Refresh [ngx.components.UICustomAction-1593004414087]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                  		this.refresh(this.tree.treeModel.getFocusedNode().data.qname);
                  		resolve();
                  '
        ↓Toast [ngx.components.UIDynamicAction-1596468501091]: 
          beanData: '{"ionBean":"ToastAction","message":"plain:refreshed !"}'
      ↓Attr [ngx.components.UIAttribute-1596472394341]: 
        attrName: title
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Refresh
    ↓Edit [ngx.components.UIDynamicElement-1596530184343]: 
      beanData: '{"ionBean":"Button"}'
      tagName: ion-button
      ↓Icon [ngx.components.UIDynamicElement-1596530184346]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:pencil"}'
        tagName: ion-icon
      ↓Event [ngx.components.UIControlEvent-1596530184349]: 
        ↓PublishEvent [ngx.components.UIDynamicAction-1596530295822]: 
          beanData: |
            '{
             "ionBean": "PublishEventAction",
             "topic": "plain:edit",
             "data": "script:this.tree.treeModel.getFocusedNode().data.qname"
            }'
      ↓Attr [ngx.components.UIAttribute-1596530184358]: 
        attrName: title
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Edit
    ↓Execute [ngx.components.UIDynamicElement-1596619428915]: 
      beanData: '{"ionBean":"Button"}'
      tagName: ion-button
      ↓Icon [ngx.components.UIDynamicElement-1596619428918]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:rocket"}'
        tagName: ion-icon
      ↓Event [ngx.components.UIControlEvent-1596619428921]: 
        ↓PublishEvent [ngx.components.UIDynamicAction-1596619428924]: 
          beanData: |
            '{
             "ionBean": "PublishEventAction",
             "topic": "plain:execute",
             "data": "script:this.tree.treeModel.getFocusedNode().data.qname"
            }'
      ↓Attr [ngx.components.UIAttribute-1596619428927]: 
        attrName: title
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Execute
↓Subscribe_Handler [ngx.components.UIEventSubscriber-1593440013446]: 
  topic: propertyChanged
  ↓Log [ngx.components.UIDynamicAction-1593441465602]: 
    beanData: '{"ionBean":"LogAction","message":"script:window.JSON.stringify(out)"}'
  ↓IfNameChanged [ngx.components.UIDynamicAction-1593440190242]: 
    beanData: '{"ionBean":"IfAction","condition":"script:out.name == ''name''"}'
    ↓CustomAction [ngx.components.UICustomAction-1593441920620]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
              		page.c8o.log.debug(''[MB] event: '' + window.JSON.stringify(event));
              		this.refresh(event.qname.substring(0, event.qname.lastIndexOf(''.'')));
              		window.setTimeout(() => {
              			var node:TreeNode = this.tree.treeModel.getNodeById(event.qname);
              			node.parent.expand();
              			resolve();
              		}, 200);
              '
    ↓Toast [ngx.components.UIDynamicAction-1593440262536]: 
      beanData: '{"ionBean":"ToastAction","message":"plain:name changed"}'
↓Content [ngx.components.UIDynamicElement-1596466518968]: 
  beanData: '{"ionBean":"Content"}'
  tagName: ion-content
  ↓Tag [ngx.components.UIElement-1593004414090]: 
    identifier: tree
    tagName: tree-root
    ↓nodes [ngx.components.UIAttribute-1593004414093]: 
      attrName: '[nodes]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:nodes
    ↓options [ngx.components.UIAttribute-1593004414096]: 
      attrName: '[options]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:options
    ↓Tag [ngx.components.UIElement-1593004414099]: 
      identifier: treeNodeTemplate
      tagName: ng-template
      ↓Tag [ngx.components.UIElement-1593004414102]: 
        selfClose: true
        tagName: img
        ↓Attr [ngx.components.UIAttribute-1593004414105]: 
          attrName: src
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:{{ this.c8o.endpoint }}/.bin?__sequence=GetIcon&className={{ node.data.className }}
        ↓Attr1 [ngx.components.UIAttribute-1593004414108]: 
          attrName: width
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:16px
        ↓Attr2 [ngx.components.UIAttribute-1593004414111]: 
          attrName: height
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:16px
      ↓span [ngx.components.UIElement-1593004414114]: 
        tagName: span
        ↓Text [ngx.components.UIText-1593004414117]: 
          i18n: false
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:{{ node.data.displayName }}
        ↓Attr [ngx.components.UIAttribute-1593004414120]: 
      ↓Attr [ngx.components.UIAttribute-1593004414123]: 
        attrName: let-node
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:
    ↓focus [ngx.components.UIControlEvent-1593004414126]: 
      attrName: (blur)
      eventName: (blur)
      ↓PublishEvent [ngx.components.UIDynamicAction-1593004414129]: 
        beanData: |
          '{
           "ionBean": "PublishEventAction",
           "topic": "plain:dboFocus",
           "data": "script:out.node.data.qname"
          }'
    ↓toggleExpanded [ngx.components.UIControlEvent-1593004414132]: 
      attrName: (toggleExpanded)
      eventName: (toggleExpanded)
      ↓prefetchChildren [ngx.components.UICustomAction-1593004414135]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                		if (event.node[''_noExpand''] || event.node.children == undefined) {
                		} else {
                			event.node.children.forEach((n) => {
                				console.log(''event ex1: '' + n.data.qname + '' children: '' + n.children + '' exp:'' + n[''_noExpand'']);
                				n[''_noExpand''] = true;
                				n.expand();
                				window.setTimeout(()=> {
                					n.collapse();
                					n[''_noExpand''] = false;
                				},1);
                			});
                		}
                		resolve();
                '
  ↓Attr [ngx.components.UIAttribute-1596469254149]: 
    attrName: class
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:page-projects